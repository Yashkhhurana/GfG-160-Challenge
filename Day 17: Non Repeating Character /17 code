//1st approach
char nonRepeatingChar(char s[]) {
    // code here
   int count[256] = {0}; 
 
    for (int i = 0; s[i] != '\0'; i++) {  
        count[(unsigned char)s[i]]++;  
    }  
    for (int i = 0; s[i] != '\0'; i++) {  
        if (count[(unsigned char)s[i]] == 1) {  
            return s[i];  
        }  
    }  

    return '$'; 
}

// 2nd approach
unordered_map<char, int> charCount;  

    // Count occurrences of each character  
    for (char c : s) {  
        charCount[c]++;  
    }  

    // Find the first non-repeating character  
    for (char c : s) {  
        if (charCount[c] == 1) {  
            return c;  
        }  
    }  

    // If there's no non-repeating character, return '$'  
    return '$'; 
