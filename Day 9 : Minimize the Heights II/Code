  // code here
        int n = arr.size();
        if(n==1)return 0;
        sort(arr.begin(),arr.end());
        int ans = arr[n-1]-arr[0], mn=0, mx=0;
        for(int i=1;i<n;i++){
            if(arr[i]-k<0)continue;
            mn = min(arr[0]+k,arr[i]-k);
            mx = max(arr[n-1]-k,arr[i-1]+k);
            ans=min(ans,mx-mn);
        }
        return ans;

// or 

int n = arr.size();  
    sort(arr.begin(), arr.end());     // Sort the array  
    
    // Initialize the minimum and maximum heights after operations  
    int newMin = arr[0] + K;                   // Start with increasing the smallest tower  
    int newMax = arr[n - 1] - K;              // Start with decreasing the tallest tower  

    // Iterate through the sorted array to find the potential new min and max 

    for (int i = 0; i < n; i++) {  
        // Calculate possible new heights  
        int increasedHeight = arr[i] + K;  
        int decreasedHeight = arr[i] - K;  

        // Update newMin and newMax based on the conditions  
        if (decreasedHeight >= 0) { // Ensure it doesn't go negative  
            newMin = min(newMin, decreasedHeight);  
        }  
        newMax = max(newMax, increasedHeight);  
    }  

    // The minimum difference after all operations  
    return newMax - newMin;
